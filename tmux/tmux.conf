# vi mode
set -g mode-keys vi
set -g status-keys vi
set -g escape-time 0

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-q' send -X begin-selection \; send -X rectangle-toggle

set -g prefix C-v
unbind C-b

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'
set -g status-interval 1
set -g history-limit 5000

# Notifying if other windows has activities
setw -g monitor-activity on
set -g visual-activity on

# 0 is too far from
setw -g base-index 1

# move windows
bind Tab last-window

# use tmux motion keys to move between panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind h if-shell "$is_vim" "send-keys c-v h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys c-v j" "select-pane -D"
bind k if-shell "$is_vim" "send-keys c-v k" "select-pane -U"
bind l if-shell "$is_vim" "send-keys c-v l" "select-pane -R"
bind o if-shell "$is_vim" "send-keys c-v o" "select-pane -l"

# use the vim resize keys.
# the number at the end is how much the pane will be resized.
bind C-Down resize-pane -D 5
bind C-Up resize-pane -U 5
bind C-Left resize-pane -L 5
bind C-Right resize-pane -R 5

# split and new windows in current_path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

set -g default-terminal "screen-256color"

# force SHELL ENV variable as shell
set-option -g default-shell ${SHELL}

# Plugins
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/default/gray'

set -g @plugin 'tmux-plugins/tmux-yank'

